{
	"Print to console": 
    {
		"prefix": "nvcpp",
		"body": [
            "///////////////////////////////////////////////////////////",
            "/// @copyright copyright description",
            "/// ",
            "/// @brief $1",
            "/// ",
            "/// @file $TM_FILENAME",
            "/// ",
            "/// @author ${3:author}",
            "/// ",
            "/// @date $CURRENT_YEAR-$CURRENT_MONTH-$CURRENT_DATE",
            "///////////////////////////////////////////////////////////",
            "",
			"// Current Cpp header",
            "#include \"$TM_FILENAME_BASE.h\"",
            "// System header",
            "// C/C++ standard library header",
            "// External library header",
            "// Current module header",
            "// Root directory header",
            "",
            "$4",
            ""
		],
		"description": "nv cpp file template"
	},
    "hFileTemplate":
    {
        "prefix": "nvh",
        "body": [
            "///////////////////////////////////////////////////////////",
            "/// @copyright copyright description",
            "/// ",
            "/// @brief $1",
            "/// ",
            "/// @file $TM_FILENAME",
            "/// ",
            "/// @author ${3:author}",
            "/// ",
            "/// @date $CURRENT_YEAR-$CURRENT_MONTH-$CURRENT_DATE",
            "///////////////////////////////////////////////////////////",
            "",
            "#ifndef __${WORKSPACE_NAME/(.*)/${1:/upcase}/}_${TM_FILENAME_BASE/(.*)/${1:/upcase}/}_H_",
            "#define __${WORKSPACE_NAME/(.*)/${1:/upcase}/}_${TM_FILENAME_BASE/(.*)/${1:/upcase}/}_H_",
            "",
            "// System header",
            "// C/C++ standard library header",
            "// External library header",
            "// Current module header",
            "// Root directory header",
            "",
            "$0",
            "",
            "#endif // __${WORKSPACE_NAME/(.*)/${1:/upcase}/}_${TM_FILENAME_BASE/(.*)/${1:/upcase}/}_H_",
            ""
        ],
        "description": "nv cpp header file template"
    },
    "cppClassTemplate":
    {
        "prefix": "nvClass",
        "body": [
            "class $1",
            "{",
            "public:",
            "    $1();",
            "    $1(const $1 &) = delete;",
            "    $1 &operator=(const $1 &) = delete;",
            "    ~$1();",
            "",
            "$0",
            "",
            "protected:",
            "private:",
            "",
            "public:",
            "protected:",
            "private:",
            "};"
        ],
        "description": "nv cpp for class file template"
    },
    "cppForLoopTemplate":
    {
        "prefix": "nvfor",
        "body": [
            "for (int $1 = 0; $1 < $2; ++$1)",
            "{ ",
            "    $0",
            "}"
        ],
        "description": "nv cpp for loop template"
    }
}